#+TITLE: 如今(2016)编写emacs-lisp的最佳实践是什么
#+URL: https://www.reddit.com/comments/43nh3h
#+AUTHOR: lujun9972
#+CATEGORY: reddit
#+DATE: [2016-09-06 二 21:54]
#+OPTIONS: ^:{}

+ Rejeep编写了许多现代化的工具,因此你应该多看看他的博客,尤其是[[http://rejeep.github.io/emacs/cask/ert/ert-runner/ert-async/ecukes/testing/travis/2014/01/09/various-testing-tools-in-emacs.html][这篇文章]]

+ 你可以仿照[[https://github.com/davidshepherd7/electric-operator][这个package]] 复用它的 =Makefile=, =Cask=, =.travis.yml= 文件以及它的package heade

+ 如果你的package没有太复杂的UI,可以用[[https://github.com/ecukes/ecukes][ecukes]] 来写集成测试.
   
+ 借助Travis来帮你在不同版本的emacs(使用evm)下编译(检查是否有warning)并测试你的package.
   
+ 用 =ert= 对lisp函数作单元测试.
   
+ 使用 =Cask= 管理依赖(这样一来,你使用Travis就更方便了,并且你开发时也不用全局安装依赖包了.
   
+ =Names= 这个package挺不错的,但是我觉得 =nameless= 更不错.
   
+ 最好不要用melpa unstable上的pacakge,尽量用melpa stable上的package代替.
   
+ [[https://github.com/magnars/dash.el][dash]], [[https://github.com/magnars/dash.el][s]], 等package都很不错,而且借助Cask与package.el,我们可以很方便的使用这些package提供的函数. 但是也推荐你优先使用[[http://endlessparentheses.com/new-on-elpa-and-in-emacs-25-1-seq-el.html][seq.el]], [[http://emacsredux.com/blog/2014/02/02/a-peek-at-emacs-24-dot-4-new-string-manipulation-functions/][subr-x.el]] 中新增的类似功能的函数. 
   
+ 尽量使用静态作用域,方法是将 =;;; -*- lexical-binding: t; -*-= [[http://irreal.org/blog/?p=628][放到文件的第一行位置]].
   
+ 将你的package发布到melpa或marmalade上,与别人分享.
