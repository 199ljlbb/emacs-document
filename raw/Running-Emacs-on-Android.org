#+TITLE: Running-Emacs-on-Android
#+URL: http://endlessparentheses.com/running-emacs-on-android.html?source=rss                               
#+AUTHOR: lujun9972
#+CATEGORY: raw
#+DATE: [2016-07-16 六 12:26]
#+OPTIONS: ^:{}


Android手机的性能越来越强,蓝牙键盘越来越便宜,你对Emacs的依赖又与日俱增,很自然的,你会开始想将手机,蓝牙键盘和Emacs三者整合在一起.
幸运的是,现在来整合这三者已经不再像以前那么苦难了. 事实上,只需要做一些小小的工作就能完美的在手机上复用你的桌面配置.

我本打算只是简单罗列一下整合这三者的步骤就好, 但是我写得有点太忘情了使得本文有点长. 我会先列出简略的说明,你可以根据需要来接着阅读后面的详细说明.

1. 通过手机Play store安装[[https://play.google.com/store/apps/details?id=com.termux][Termux]] (还可以安装[[https://play.google.com/store/apps/details?id=org.pocketworkstation.pckeyboard][Hacker’s keyboard]], 但不是必须的)
2. 启动Termux,然后运行下面的命令
  
   #+BEGIN_SRC sh
     apt update
     apt install emacs
   #+END_SRC
   
3. 拷贝桌面PC的init.el文件到手机上(后面还会提到如何保持初始化文件的同步).
4. 运行emacs 
     + 若Emacs报出“void-function …”这样的错误,注释掉初始化文件中的相关部分,然后再运行emacs. 后面会解释为什么会这样
       try again. See below for the explanation.
5. emacs启动成功,可以大肆庆祝了.

   [[http://endlessparentheses.com/images/android-emacs-result.png]]

Emacs在手机山运行的太好了,让我感到很惊奇. 甚至是[[https://github.com/Malabarba/beacon][Beacon]] 这样的大型图形化package,也能够直接运行(只是可能会有点慢).

* Update 11 Apr 2016

Fredrik Fornwall給Termux上的Emacs package打了补丁,现在已经不再需要tmp目录了. 因此现在在Android手机上安装Emacs变得超级简单了.

* A tale of two thumbs

昨天晚上,由于没有了笔记本以及任何带键盘的东西,我感到有些无聊, 于是我做了任何一个正常人都会做的事情:在我的手机上安装Emacs. 
我第一次有这个想法是在一年多前,但是最后以失败而告终了. 但是这次有些不一样了,我感觉我能成.

最开始,我看到play store上有个[[https://play.google.com/store/apps/details?id=com.zielm.emacs][Emacs app]] 看起来完全能满足我的要求. 我上一次尝试在手机上安装Emacs时也安装了这个app,但是它很不稳定,经常crash. 这一次更糟糕,它甚至都无法被安装了,Play Store每次都提示"Failure to install"的错误信息.

然而,我也并不是完全一无所获. 一条[[https://play.google.com/store/apps/details?id=com.zielm.emacs&reviewId=Z3A6QU9xcFRPSGQ2WG1fR1M3MlhacU13MmtWd2NlaGpza1k0czVkaVlVUm85QThiZ3V6RjRNQWU2bUFTcE0yWWVzM3VheG1ERkYxOVctbnhfWVJBeUZsc0E][好心的评论]] (然而它的评分却并不高) 给我指出了一个新的放向. [[https://play.google.com/store/apps/details?id=com.termux][Termux]], 一个很健壮的程序,他声称提供了"强大的终端模拟器,以及大量的linux packages".

安装完了Termux之后,我确实得到了一个终端模拟器,但是我并不觉得这有什么,以早就用过像这种的终端app了. 我尝试着输入如下命令

#+BEGIN_SRC sh
  apt update
  apt install emacs
#+END_SRC

[[http://endlessparentheses.com/images/termux-emacs.png]]

令人惊叹的是, Termux运行的比想象中的还要好. it played out even better than expected. Installing Emacs would have been fine, but installing
version 25 is exceptional! My init file is sure to be incompatible with Emacs 24, but now that we have 25…
Dare I even hope? Could I reproduce my entire setup on this minute device?

Before proceeding, I hopped back over to the play store and installed the [[https://play.google.com/store/apps/details?id=org.pocketworkstation.pckeyboard][Hacker’s keyboard]], to get access to
modifier keys. Then, starting emacs from the terminal worked as expected, if a bit slowly, but my streak of
good fortune was about to end.

The first command I issued (M-x list-packages) failed with a cryptic message about nonexistent file in /tmp/
asdlij198h1 (/this should not happen to you thanks to Fredrik’s patch). The package menu displayed, but
refused to refresh. So I C-z out of Emacs, and try mkdir /tmp/.

#+BEGIN_EXAMPLE
Permission denied
#+END_EXAMPLE

Ok, I should have expected that. sudo doesn’t work either, so I issue fg to go back to Emacs and try a
different approach.

#+BEGIN_SRC emacs-lisp
  (setq temporary-file-directory "~/tmp/")
#+END_SRC

Now list-packages again, and it works! I try to install company from the gnu repository, and it works too! In
fact, everything works. I run M-x global-company-mode and it’s all there, popup menu and everything.

At this point I’m probably way more satisfied with myself than I should for such a senseless pursuit, but I’m
too high to realize.

Next step is to port over my real init file. Fortunately, I keep it sync’d via Dropbox, so it’s easy to make
available on the phone. Just open the Dropbox app, find my init.el, and mark it to be “Available offline”.
Same thing for my init.org. Dropbox saves the files somewhere deep inside its own data directory, and
automatically syncs them up when you make local changes (though you have to manually ask it to pull down
remote changes).

Back on Termux, I send Emacs to the background again with C-z, and

#+BEGIN_SRC sh
  cd ~/.emacs.d
  ln -s /sdcard/Android/data/com.dropbox.android/files/SOME_GIBBERISH/.emacs.d/init.el
  ln -s /sdcard/Android/data/com.dropbox.android/files/SOME_GIBBERISH/.emacs.d/init.org
#+END_SRC

Actually finding the file took a bit of trial and error. After getting to the files directory I had to
tab-complete my way through several gibberish directory names before finding the right one.

fg and we’re back in Emacs.

The next obstacle are the packages. I know my init file is not going to load before I install the necessary
packages. Sadly, I never had the foresight of rewriting my configuration in something like use-package, but
there’s something almost as good. Like I’ve mentioned before, Emacs 25 [[http://endlessparentheses.com/new-in-package-el-in-emacs-25-1-user-selected-packages.html][keeps track of user-selected packages]],
so I was able to go into my custom-set-variables and find a sizeable list under package-selected-packages.
With no further ceremony, I just evaluate the whole thing with C-M-x, and issue M-x
package-install-selected-packages.

This takes a while…

This is a good moment to find out if Termux works well in the background. Switch to the Youtube app, watch a
couple of videos, switch back… And it worked!

This is it now — the moment of truth. I’m still feeling high and mighty after all this success, but I have to
respect the odds. My init file has 4 thousand lines of Elisp and involves over 100 packages. That’s a whole
lot of could-go-wrong potential.

I take a deep breath and mentally try to lower my expectations. I C-x C-c back to the terminal, and then
carefully type emacs followed by ↵, only to plunge head-first into an error.

Something about the tmp directory again. Haven’t I solved this one? A bit more digging reveals it’s being
triggered by (server-start), because server-socket-dir is bound to /tmp/emacs1000. The comments above the
variable explain why.

#+BEGIN_SRC emacs-lisp
  ;; We do not use `temporary-file-directory' here,
  ;; because emacsclient does not read the init file.
  (defvar server-socket-dir
    ...)
#+END_SRC

That’s understandable, but it doesn’t help me. Impatiently, I just wrap the call to server-start in
ignore-errors and try again…

Another error. This time it’s complaining that set-fringe-mode is a void function. That’s a lot easier to
understand. The Emacs binary provided in Termux is compiled for terminal (why wouldn’t it be?), so many
graphical functions aren’t defined at all. It’s also easy to solve. Just add a conditional around the function
call.

#+BEGIN_SRC emacs-lisp
  (when (fboundp 'set-fringe-mode)
    (set-fringe-mode '(nil . 0)))
#+END_SRC

A third time. C-x C-c emacs ↵… And it works! No more errors. Not even a warning! My beloved darktooth theme is
unrecognizable, but all the other indicative signs of my Emacs setup are there. Smart-mode-line discretely
smiles at me from the bottom of the screen. Beacon eagerly blinks at me as soon as I start scrolling. And the
unmistakable coziness of my personal keybinds reach me even through the limited interface of a
touchscreen-keyboard.

As we get to this point, a lesser person might feel an anticlimax — a hint of a “what for?”, perhaps. But not
me. I just feel safe and reassured, knowing that, wherever I am and whenever I need it, Emacs will always be
sitting in my pocket.

Now I just need to get myself one of those bluetooth keyboards I mentioned…
