#+URL: http://www.clarkdonley.com/blog/2014-10-26-org-mode-and-writing-papers-some-tips.html

* Introduction

Many people like to use org-mode as a planning application, but I also think
that it is a fantastic tool for writing papers that you can export to .pdf via
\(\rm\LaTeX{}\). Unless you have complex formatting requirements, org makes
the writing generally faster while still having access to great features. Here
are some tips that have been helpful for me.

* Set up a Template

If you’re writing a standard humanities paper, there are a few quick things
that you can add to the header to make your paper look like you’d normally
expect. It makes things much easier if you figure out what you standardly need
in a paper and set up a template to include them each time. I just have a
TextExpander snippet set up for this. Here’s an example of some things you
might want to include.

#+BEGIN_SRC org
  # Set the article class
  ,#+LaTeX_CLASS: article
  ,#+LaTeX_CLASS_OPTIONS: [12pt]

  # No need for a table of contents, unless your paper is quite long.
  ,#+OPTIONS: toc:nil

  # Use fancy looking fonts. If you don't have MinionPro installed,
  # a good alternative is the Palatino-style pxfonts.
  # See: [[http://www.tug.dk/FontCatalogue/pxfonts/][http://www.tug.dk/FontCatalogue/pxfonts/]]
  ,#+LATEX_HEADER: \usepackage[mathlf]{MinionPro}
  ,#+LATEX_HEADER: \usepackage[scaled=.875]{inconsolata}

  # Set the spacing to double, as required in most papers.
  ,#+LATEX_HEADER: \usepackage{setspace}
  ,#+LATEX_HEADER: \doublespacing

  # Fix the margins
  ,#+LATEX_HEADER: \usepackage[margin=1in]{geometry}

  # This line makes lists work better:
  # It eliminates whitespace before/within a list and pushes it tt the left margin
  ,#+LATEX_HEADER: \usepackage{enumitem}
  ,#+LATEX_HEADER: \setlist[enumerate,itemize]{noitemsep,nolistsep,leftmargin=*}

  # I always include this for my bibliographies
  ,#+LATEX_HEADER: \usepackage[notes,isbn=false,backend=biber]{biblatex-chicago}
  ,#+LATEX_HEADER: \addbibresource{/Users/clarkdonley/Files/Academic/Bibliography/main.bib}

  ,#+TITLE: An Example Title
  ,#+AUTHOR: Clark Donley
  ,#+DATE: October 26, 2014
#+END_SRC

* Enable Fast, LaTeX-friendly Spellcheck

Spell check does not automatically run by default when you start org-mode, but
it’s obviously very helpful to have this when you are writing papers. There
are three parts that will make this work will. If you don’t already have 
[[http://www-sop.inria.fr/members/Manuel.Serrano/flyspell/flyspell.html][flyspell]], you’ll need to install it.

The following goes into your .emacs or Preferences.el.

 1. Hook Flyspell into Org-mode.
 2. Ignore Flyspell messages. Because Flyspell runs on startup (due to 1),
    this can cause a delay if you allow to display spell-checking process in
    the status bar. So you’ll want to ignore messages so that you don’t have
    that delay every time you open a .org file,
 3. Ignore \(\rm\LaTeX{}\) commands in spellcheck. I often use bits of \(\rm\
    LaTeX{}\) here and there, and I find it annoying if it’s always underlined
    with red.

#+BEGIN_SRC emacs-lisp
  ;; 1. hook flyspell into org-mode
  (add-hook 'org-mode-hook 'flyspell-mode)
  (add-hook 'org-mode-hook 'flyspell-buffer)

  ;; 2. ignore message flags
  (setq flyspell-issue-message-flag nil)

  ;; 3. ignore tex commands
  (add-hook 'org-mode-hook (lambda () (setq ispell-parser 'tex)))
  (defun flyspell-ignore-tex ()
    (interactive)
    (set (make-variable-buffer-local 'ispell-parser) 'tex))
  (add-hook 'org-mode-hook 'flyspell-ignore-tex)
#+END_SRC

* Enable CDLaTeX

CDLaTeX is “is a minor mode that is normally used in combination with a major
LaTeX mode like AUCTeX in order to speed-up insertion of environments and math
templates” and the [[https://www.gnu.org/software/emacs/manual/html_node/org/CDLaTeX-mode.html][Org manual gives a very easy way to enable it]]:

#+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook 'turn-on-org-cdlatex)
#+END_SRC

* Automatically Count Words

I think that it’s helpful to automatically count words as you write. Doing
this is fairly easy. First, you’ll need to install [[https://github.com/bnbeckwith/wc-mode][wc-mode]]. Second, you’ll
need to add this line to your .emacs or Preferences.el:

#+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook 'wc-mode)
#+END_SRC

* Distraction-free Writing: Enable writeroom-mode

This is not org-specific, but you may want to enable [[https://github.com/joostkremers/writeroom-mode][writeroom-mode]] in order
to get rid of all distractions while you are writing. Writeroom-mode makes the
text centered on fullscreen without and eliminates all extraneous information.

* Enable RefTex for Fast Insertion of Citations

You can easily use RefTeX to quickly insert citations from a .bib file. I
modified some of this from [[http://kieranhealy.org/esk/starter-kit-latex.html][Kieran Healy’s instructions]]. I keep my bibliography
file at /Users/clarkdonley/Files/Academic/Bibliography/main.bib and I use
biblatex. After a bit of fiddling, this configuration works. Again, it goes in
your .emacs or Preferences.el and you’ll need to configure the specifics for
your needs.

This will allow you to easily insert citations with C-c (.

One thing to note is that, sometimes, I have to close and open my .org file to
reload the .bib properly. I’ll try to figure that out in the future.

#+BEGIN_SRC emacs-lisp
  (setq reftex-default-bibliography 
    '("/Users/clarkdonley/Files/Academic/Bibliography/main.bib"))

  (setq reftex-bibpath-environment-variables
    '("/Users/clarkdonley/Files/Academic/Bibliography/:/Users/clarkdonley/Files/Academic/Bibliography/"))

  (setq reftex-bibpath-environment-variables
  '("/Users/clarkdonley/Library/texmf/bibtex/bib"))
  (setq reftex-default-bibliography '("/Users/clarkdonley/Files/Academic/Bibliography/main.bib"))
  (setq reftex-bibliography-commands '("bibliography" "nobibliography" "addbibresource"))

  (setq reftex-default-bibliography
        (quote
         ("user.bib" "local.bib" "main.bib")))

  (add-hook 'LaTeX-mode-hook 'turn-on-reftex)   ; with AUCTeX LaTeX mode
  (autoload 'reftex-mode     "reftex" "RefTeX Minor Mode" t)
  (autoload 'turn-on-reftex  "reftex" "RefTeX Minor Mode" nil)
  (autoload 'reftex-citation "reftex-cite" "Make citation" nil)
  (autoload 'reftex-index-phrase-mode "reftex-index" "Phrase mode" t)
  (add-hook 'LaTeX-mode-hook 'turn-on-reftex)   ; with AUCTeX LaTeX mode
  (add-hook 'latex-mode-hook 'turn-on-reftex)   ; with Emacs latex mode

  ;; Make RefTeX faster
  (setq reftex-enable-partial-scans t)
  (setq reftex-save-parse-info t)
  (setq reftex-use-multiple-selection-buffers t)
  (setq reftex-plug-into-AUCTeX t)

  ;; Make RefTeX work with Org-Mode
  ;; use 'C-c (' instead of 'C-c [' because the latter is already
  ;; defined in orgmode to the add-to-agenda command.
  (defun org-mode-reftex-setup ()
    (load-library "reftex") 
    (and (buffer-file-name)
    (file-exists-p (buffer-file-name))
    (reftex-parse-all))
    (define-key org-mode-map (kbd "C-c (") 'reftex-citation))

  (add-hook 'org-mode-hook 'org-mode-reftex-setup)

  ;; RefTeX formats for biblatex (not natbib)
  (setq reftex-cite-format
        '(
          (?\C-m . "\\cite[]{%l}")
          (?t . "\\textcite{%l}")
          (?a . "\\autocite[]{%l}")
          (?p . "\\parencite{%l}")
          (?f . "\\footcite[][]{%l}")
          (?F . "\\fullcite[]{%l}")
          (?x . "[]{%l}")
          (?X . "{%l}")
          ))

  (setq font-latex-match-reference-keywords
        '(("cite" "[{")
          ("cites" "[{}]")
          ("autocite" "[{")
          ("footcite" "[{")
          ("footcites" "[{")
          ("parencite" "[{")
          ("textcite" "[{")
          ("fullcite" "[{") 
          ("citetitle" "[{") 
          ("citetitles" "[{") 
          ("headlessfullcite" "[{")))

  (setq reftex-cite-prompt-optional-args nil)
  (setq reftex-cite-cleanup-optional-args t)
#+END_SRC
