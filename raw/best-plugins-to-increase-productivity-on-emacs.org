#+TITLE: best-plugins-to-increase-productivity-on-emacs
#+URL: http://xmodulo.com/best-plugins-to-increase-productivity-on-emacs.html                               
#+AUTHOR: lujun9972
#+CATEGORY: raw
#+DATE: [2016-07-16 六 12:45]
#+OPTIONS: ^:{}

一年多以前, 我四处寻找各种插件想[[http://xmodulo.com/turn-vim-full-fledged-ide.html][把Vim打造成一个全选功能的IDE]]. 然而搞笑的是,那篇帖子下面许多评论都在说Emacs早已内置了这些插件,其本身就是个很棒的IDE了. 
然而,虽然我也认同[[http://list.xmodulo.com/gnu-emacs.html][Emacs]] 真的是具有无与伦比的可扩展性,但也并不能说不带任何第三方插件的Emacs就已经是一个完美的编辑器了. 好在Emacs的第三方插件也不少. 
Emacs支持的插件太多了,你可能都不知道怎么选择比较好. 本文我将列出一些使用Emacs必不可少的插件,借助这些插件将会极大的提高你的工作效率的.
虽然我比较关于的是编程相关的效率,但这些插件对于其他工作也非常有用.

1. Ido-mode

[[https://www.flickr.com/photos/xmodulo/23311895573/]]

对于初学者来说,这恐怕是最有用的插件了, Ido的意思是interactively do. 它能将大多数时候干巴巴的命令提示窗口转换为具有字符匹配功能的菜单.
举个例子,当尝试打开本地目录中的一个文件时,本来只会显式一个普通的命令提示符等待你输入文件名, 但在开启ido-mode后,随着你输入内容,Ido会帮助你匹配最合适的文件.
这样你很容易就能看到你的行为带来什么样的结构,而且还能很快的从多个具有相同前缀的文件中找出你所想要的那个文件.

2. Smex

[[https://www.flickr.com/photos/xmodulo/23310442314/]]

这个插件不是特别的出名,但它是对Ido-mode的一个很好的补充: Smex是针对 'M-x' 命令提示的一个很好的替代品.
Smex的灵感来源于Ido-mode,因此它也为那些要输入的命令提供了类似Ido的交互式搜索功能. 
Smex简单而高效,可以为你节省很多时间.

3. Auto Complete

[[https://www.flickr.com/photos/xmodulo/23643004900/]]

在知道有这个插件之前,我有一半的时间都浪费在通过按下 =M-/= 来补全单词上了. 现在它会为我展示一个弹出菜单来供我选择要补全的内容.
关于这个插件我没什么好说的,我们都很需要它.

4. YASnippet

[[https://www.flickr.com/photos/xmodulo/23830403072/]]

这个插件专用于开发人员. 总有一些代码是我们经常要用到的. 例如我就常常需要输入 =var_dump(...); exit;= 来调试PHP.
我一边又一边的输入这段代码,然后突然领悟到,我完全可以预先将这段代码保存成一个代码片段,然后在要用的时候,直接插入.
YASnippets可以让你很方便的导入代码片段文件,也可以让你很方便的创建自己的代码片段文件. 然后只需要按下一个快捷键就能将一个小段关键字扩展成一段预选写好的代码,并且可以很方便的修改这段代码.

5. Org-mode

[[https://www.flickr.com/photos/xmodulo/23570808789/]]

不得不承认, 我是最近才开始使用Org-mode的. 但它对我来说早已是如雷贯耳. 我看到很多文章都在说:Org-mode可以改变你的生活.
Org-mode的理念非常简单: 它被设计来简化记录流程同时使用纯文本格式来保存数据,这使得它可以很方便的在任务列表和各种数据之间导航,并且可以进行像根据优先级或预期时间进行过滤,设置重复任务等操作.
虽然理念很简单,但是你可以做的事情有很多,你很快就会被埋没在Org-mode所提供的那些选项中的.
我这里不打算写一个长长的教程教你怎么用Org-mode,我推荐你去阅读[[http://orgmode.org/worg/org-tutorials/][这些指南]], 学习那些关于Org-mode的视频,亲自去体验一下Org-mode有多么牛逼.

6. Helm

[[https://www.flickr.com/photos/xmodulo/23310442334/]]

有些人很喜欢它,有些人则不怎么对它感冒. 我属于后者. 但是既然那么多人喜欢它,那我们不可能不提它.
Helm旨在完全改变你的Emacs体验. 简单来说, Helm是一个框架用来帮助你快速查找文件或命令.
Based on your input, it will try to use word completion to guide you to the action you have in mind. 
一开始你可能会觉得不太习惯, 但对于某些人来说,Helm会变成它们宗教般的存在. 虽然我并不是狂热的Helm粉,但是我也确实觉得用 =helm-occur= 来在文档中搜索字符串真是太赞了--它会在另一个buffer中显示出所有的匹配行,而且让你可以很容易的导航到这些位置.
若你想快速了解下Helm的功能,可以看看[[http://tuhdo.github.io/helm-intro.html][这篇文章中的演示]].

7. ace-jump-mode

[[https://www.flickr.com/photos/xmodulo/23856168871/]]

还有一个插件也深受众人的喜爱,那几就是ace-jump-mode. 我目前也正在学习使用这个mode. 掌握这个插件之后,你将完全不再需要用到鼠标了.
简单来说,触发ace-jump-mode后, 他会提示你输入一个字符. 所有以该字符开头的单词都会高亮起来并被分配一个唯一的字符作为索引. 按下索引字符后,光标就会跳到指定的单词位置了.
我必须承认,要养成使用它的习惯很难,但一旦你习惯了这种方式,它会极大的提高你移动的速度.

8. find-file-in-project

[[https://www.flickr.com/photos/xmodulo/23570808809/]]

If you like Sublime text and its very handy 'Ctrl-p' fuzzy search to open any file in a project, then you will
love find-file-in-project (or ffip). After setting it up by declaring the root of your version control folder,
you can summon easily a cool text bar that quickly scans and searches through your code base for a matching
file based on the name you input. I like to have it bound to the F6 key on my keyboard. It is simple and very
handy if you do not know the complicate directory structure from the top of your head.

9. Flymake

[[https://www.flickr.com/photos/xmodulo/23310442354/]]

For IDE lovers, I think that syntax checker is one of the most powerful features. It is great for beginners
and handy for tired programmers. And thanks to Flymake, Emacs users can enjoy it too. Since I work in PHP a
lot, Flymake does not need any extra configuration. As I write my code, it will automatically check my code
and highlight any line that contains a problem. For compiled languages, Flymake will look for a Makefile that
it will use to check your code. Absolutely magical.

10. electric-pair

Last, but not least, electric-pair is one of the simplest yet most powerful plugin in my opinion. It just
automatically closes whatever parenthesis or bracket you open. It doesn't look like much at first, but trust
me. After struggling for the hundredth time to find that matching parenthesis, you will be glad to have a
plugin to ensure that all your expressions are balanced.

To conclude, Emacs is a fantastic tool. Probably not a shocker. Try these plugins and watch as your
productivity goes through the roof. This list is of course not exhaustive at all. If you want to bring your
contribution, feel free to do so in the comments. I am myself always looking for new plugins to try and new
ways to experience Emacs.
