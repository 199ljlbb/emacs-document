*  R.I.P. del.icio.us
(若你对我之前所使用的方案不感兴趣的话，可以跳过此章)

我使用[[https://delicious.com/vk/][delicious]] 来存储，管理，访问网络书签已经有几年的历史了. delicious的Firefox插件实在太好用了, 用它来存储，贴标签，加注释,管理书签实在很方便.

不幸的是, [[https://en.wikipedia.org/wiki/Delicious_%2528website%2529][delicious]]先是被卖给了yahoo ,随后又被卖给了AVOS. 他们决定对n原本完美的社会化书签网络服务(social bookmark web service )作出一些改变. 我喜爱的firefox插件也在某一天停止工作了. 我一点也不喜欢信的delicious,它完全毁了我使用多年的完美工作流程.

因此, 我开始寻找管理书签的替代方法. 同时,我也开始尝试使用Org-mode来完成尽可能多的工作. 这也是为什么[[https://lists.gnu.org/archive/html/emacs-orgmode/2012-06/msg00640.html][我想使用Org-mode来管理书签的原因]], 虽然这样以来就丢失像为书签和标签导出RSS-feeds这一类的社会化书签方面的功能(social bookmark features). 再说,云服务已经毁了我的数字化生活一次了. 我想这次还是独立一些比较好.

* 我的需求
在我说明实现的具体细节之前,我先描述一下我想象中理想的工作流程吧.

我上面提到过的, 我希望使用Org-mode来解决我的需求,为此我可以付出缺失任何社会化功能(例如feeds)的代价.

我需要在Android手机,桌面浏览器以及GNU/Emacs上都能保存书签.

并且,我还需要能够为这些书签打标签以及添加注释.

借助Org-mode,我完全可以导航,搜索,过滤,打开以及修正这些已存储的书签.

* 实现方案
我有一个名为 =notes.org= 的文件,用于收集各种片段,知识,想法,指南之类的东西. 在文件最后,我创建了一个新的主标题,名为"Bookmarks". 在该主标题下存放的是我收集的网络书签,其格式与普通的Org-mode事项一样: 
#+BEGIN_SRC org
  ,** [[http://usesthis.com/interviews/][What do people use to get stuff done?]] :pim:diy:hardware:software:
   :PROPERTIES:
   :CREATED: [2014-08-09 Sat 10:41]
   :END:
#+END_SRC

该书签带给了我关于硬件,软件,工作环境,有远见的想法等主题的源源不断的灵感!

该URL是我从heise论坛中偶尔发现的.

参见[[http://karl-voit.at/2014/08/10/what-do-people-use][我的博客]].

** Capture on desktop computers

Capturing on my desktop computers is easy. Each of them is running GNU/Emacs with Org-mode when I work with them. Therefore, I added a capture template for bookmarks: 
#+BEGIN_SRC emacs-lisp
  (setq org-capture-templates
        '(
          ;; many more capture templates
          ("b" "Bookmark" entry (file+headline "~/share/all/org-mode/notes.org" "Bookmarks")
           "* %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
          ;; many more capture templates
          )
        )
#+END_SRC

I tried to set-up [[http://orgmode.org/worg/org-contrib/org-protocol.html][org-protocol]] but failed so far. This thing is able to capture from external sources such as your web browser directly to Org-mode.

However, I guess it would not save me much effort, since I can add a bookmark by following steps: within the browser I press C-l to go to and select the URL of the current page. Then I add it to the clipboard with C-c. I switch to Emacs/Org-mode (usually one virtual desktop to the left) and invoke the capture shortcut for bookmarks: C-c c b. After adding tasks, I can add an URL description either by working my-url-linkify (see below) or manually.

** Capture on Android
 Most bookmarks get saved when I read Atom/RSS feeds on my phone. Fortunately, I can easily "share" any URLs with MobileOrg. This app syncs with my desktop Org-mode. By convention, I add "Bookmark" in front of the URL. That way, I can differ other inbox-entries from bookmark URLs I want to save.

After synchronizing, bookmarks in MobileOrg result in inbox.org entries like: 
#+BEGIN_SRC org
  ,* NEXT Bookmark [[http://Karl-Voit.at][Homepage of Karl Voit]]
   [2014-08-10 Sun 16:24]   
#+END_SRC

 With the Elisp function my-save-bookmark, I am quickly able to move the bookmark from inbox.org to corresponding heading in notes.org. Additionally, the tagging process is invoked. Thus, I only apply the keyboard shortcut on a bookmark, enter the tags, and I am done with this bookmark.

This Elisp funktion is one of my very first Elisp functions. So please do send me improvements if you see room for some: 
#+BEGIN_SRC emacs-lisp
  ;; ######################################################
  ;; smart moving bookmark headings from inbox to notes.org
  ;; see id:2014-03-09-inbox-to-bookmarks
  (defun my-save-bookmark()
    "removes NEXT/Bookmark, (NOT YET: FIXXME: retrieves title),
  move time-stamp to CREATED, re-file to bookmarks, invoke Org-mode tagging process"
    (interactive)
    (save-excursion
      ;; get myself to the beginning of the current heading:
      ;;(outline-previous-visible-heading 1)  ;; jump to previous heading
      ;;(outline-next-visible-heading 1)      ;; jumps to beginning of the current (interesting) heading
      (beginning-of-line)                   ;; jump to beginning of line
      (let ((mybegin (point)))              ;; mark beginning of line as start point
        (outline-next-visible-heading 1)    ;; jumps to EOF if it is the last entry
        (save-restriction
          (narrow-to-region mybegin (point))  ;; ignore everything outside of region
          ;; search/replace unwanted keywords at the beginning:
          (goto-char (point-min))
          (while (search-forward "* NEXT Bookmark " nil t) (replace-match "* " nil t))
          (goto-char (point-min))
          (while (search-forward "* NEXT " nil t) (replace-match "* " nil t))
          (goto-char (point-min))
          (while (search-forward "* Bookmark " nil t) (replace-match "* " nil t))
          (goto-char (point-min))
          (while (search-forward "//m.heise.de" nil t) (replace-match "//heise.de" nil t));; remove mobile heise URL
          (goto-char (point-min))
          (while (search-forward "/from/atom10?wt_mc=rss.ho.beitrag.atom" nil t);; remove heise RSS tags
            (replace-match "" nil t)
            )
          (goto-char (point-min))
          ;; insert second asterisk (modify to second level heading)
          (insert "*")
          ;; move time-stamp to properties-drawer:
          (search-forward-regexp "^\\[20")  ;; jump to second line (with time-stamp) via search
          (beginning-of-line)
          (insert ":PROPERTIES:\n:CREATED:  ")
          (end-of-line)
          (newline)
          (insert ":END:\n")
          ;; move region to end of notes.org
          (kill-region mybegin (point)) ;; kill region to kill-ring
          (switch-to-buffer "notes.org")
          (end-of-buffer)
          (newline)
          (yank)
          ;; add tags
          (outline-previous-visible-heading 1)  ;; jump to heading
          (org-set-tags-command)
          )
        )
      )
    )
#+END_SRC

When I store an URL without any description, it might look like this: 
#+BEGIN_SRC org
  ,* NEXT Bookmark http://Karl-Voit.at
   [2014-08-10 Sun 16:24]
#+END_SRC

To add the web page title to the link, I looked up code in the web and adopted it to my needs: 
#+BEGIN_SRC emacs-lisp
  ;; ######################################################
  ;; replaces URL with Org-mode link including description
  ;; see id:2014-03-09-inbox-to-bookmarks
  (defun my-www-get-page-title (url)
    "retrieve title of web page.
  from: http://www.opensubscriber.com/message/help-gnu-emacs@gnu.org/14332449.html"
    (let ((title))
      (with-current-buffer (url-retrieve-synchronously url)
        (goto-char (point-min))
        (re-search-forward "" nil t 1)
        (setq title (match-string 1))
        (goto-char (point-min))
        (re-search-forward "charset=\\([-0-9a-zA-Z]*\\)" nil t 1)
        (decode-coding-string title (intern (match-string 1)))))
    )

  (defun my-url-linkify ()
    "Make URL at cursor point into an Org-mode link.
  If there's a text selection, use the text selection as input.

  Example: http://example.com/xyz.htm
  becomes
  \[\[http://example.com/xyz.htm\]\[Source example.com\]\]

  Adapted code from: http://ergoemacs.org/emacs/elisp_html-linkify.html"
    (interactive)
    (let (resultLinkStr bds p1 p2 domainName)
      ;; get the boundary of URL or text selection
      (if (region-active-p)
          (setq bds (cons (region-beginning) (region-end)) )
        (setq bds (bounds-of-thing-at-point 'url))
        )
      ;; set URL
      (setq p1 (car bds))
      (setq p2 (cdr bds))
      (let (
            (url (buffer-substring-no-properties p1 p2))
            )
        ;; retrieve title
        (let ((title (my-www-get-page-title url)))
          (message (concat "title is: " title))
          ;;(setq url (replace-regexp-in-string "&" "&" url))
          (let ((resultLinkStr (concat "[[" url "][" title "]]")))
            ;; delete url and insert the link
            (delete-region p1 p2)
            (insert resultLinkStr)
            )
          )
        )
      )
    )
#+END_SRC

Unfortunately, this does only work in some cases. Most of the time, I get save-current-buffer: Invalid coding system: UTF-8 which I do not understand. Drop me a line, if you've got an idea how to fix this issue. 

Note: current versions of my Elisp functions can be found at: https://github.com/novoid/dot-emacs

** Future plans: going social (again)

This method works pretty satisfying to me.

For the future, I plan to integrate selected bookmarks to my web blog using my web blog software [[https://github.com/novoid/lazyblorg][lazyblorg]]. Adding a bookmark to my blog should not take more than adding a "blog"-tag to it while saving.

Such rather small entries will get a special auto-tag such as "small" or "bookmark". You will be able to follow them using a dedicated [[https://en.wikipedia.org/wiki/Atom_feed][Atom feed]] I will provide which holds only small/bookmark entries. This way, I get the social sharing aspect once more. This time, under my control. 
