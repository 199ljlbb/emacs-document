#+TITLE: My pragmatic decision on GNU Emacs versus vim for my programmin
#+URL: https://utcc.utoronto.ca/~cks/space/blog/programming/CodeEditingVimVsEmacs
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2017-02-10 äº” 22:36]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil


One of the reasons I've been [[https://utcc.utoronto.ca/~cks/space/blog/unix/VimSmartsVsGNUEmacs][thinking about vim]] lately and [[https://twitter.com/thatcks/status/766305994012057604][working on]] [[https://twitter.com/thatcks/status/766665611816689664][learning]]
[[https://twitter.com/thatcks/status/766665611816689664][it more]] is that I've been flirting with the idea of switching to using vim for
all of my programming in order to focus all of my attention on one editor
instead of splitting it across vim and GNU Emacs as [[https://utcc.utoronto.ca/~cks/space/blog/unix/SamWhyILikeIt][I nominally claim to do]].
The reality is that I already spend most of my editing time in vim, because
these days I don't do much programming (especially in [[https://utcc.utoronto.ca/~cks/space/blog/programming/FancyProgrammingEditors][the languages I use GNU]]
[[https://utcc.utoronto.ca/~cks/space/blog/programming/FancyProgrammingEditors][Emacs for]]). Given an increasing use of vim and thus increasing fluency in it,
and low GNU Emacs use (with a slow loss of fluency), I thought it might make
sense to just go all in on vim. Vim has all of the basic features that I need
to be productive (like windows on multiple buffers aka files), and it also has
its own well developed form of super-intelligence (and plenty of people who
like it a lot).

I'll put the conclusion up front: I'm not going to do that. I've decided it
makes more sense to stick with GNU Emacs as my super-intelligent editing
environment (and maybe get a bit better at it every so often).

What ultimately changed my mind today was the experience of experimenting with
GNU Emacs' [[http://www.flycheck.org/en/latest/][flycheck]] (and [[https://github.com/dougm/goflymake][go-flymake's addon for it]]). Specifically, that the
whole exercise took me only a couple of minutes to get going and everything
basically just worked. I'm sure that there's an equivalent plugin setup for
vim and an experienced vim person could get it up and running in no time flat,
but I'm not that person. For better or worse, GNU Emacs has worked out a whole
complex ecology of [[https://www.emacswiki.org/emacs/ELPA_][ELPA]] and [[https://www.emacswiki.org/emacs/MELPA][MELPA]] and then buried all of the complexity so
that it pretty much just works for people like me. I'm a lazy and pragmatic
person these days ([[https://utcc.utoronto.ca/~cks/space/blog/python/ShiftingIndentationStyle][eg]]), and for all my agonizing and contemplating, I still
know enough GNU Emacs to be productive and GNU Emacs makes it easy for me to
just get code written in a sophisticated environment with a lot of niceties
that generally just work.

(I don't know enough about the world of vim plugins to know if
super-intelligent stuff is more likely to appear for GNU Emacs than for vim,
and of course my current impressions are biased by the fact that [[https://www.emacswiki.org/emacs/MELPA][MELPA]] seems
to have this massive list of everything)

This isn't to say that getting code written is hard in vim. With work I could
probably assemble a vim environment full of equivalents of [[https://utcc.utoronto.ca/~cks/space/blog/programming/MagitPraise][magit]] and 
[[https://utcc.utoronto.ca/~cks/space/blog/programming/GoGocodeEmacsAutocompleteII][company-mode]] and so on, [[https://utcc.utoronto.ca/~cks/space/blog/unix/LikingVi][I like vi's overall approach]], and I'm going to reach
the point where I'm better at editing in vim than in GNU Emacs. But since both
GNU Emacs and vim are quite capable editors and I already have a good GNU
Emacs environment that I find easy enough to do things in, it seems unlikely
that switching exclusively to vim would make a huge difference, especially
given that I don't write code in GNU Emacs all that often (cf [[https://en.wikipedia.org/wiki/Amdahl%2527s_law][Amdahl's Law]]).
Instead it seems more likely that I'd spend a lot of time churning around and
wind up more or less in the same spot, except using vim commands instead of
GNU Emacs ones. That's not enough of a win to be tempting, not any more.

(To head off the obvious suggestion, for various reasons I'm not interested in
trying to use vi keystrokes in GNU Emacs. If I'm going to be using GNU Emacs,
I have a lot of experience and reflexes built around its native key bindings.)

There's a part of me that regrets this (the same part that [[https://utcc.utoronto.ca/~cks/space/blog/programming/RustMyViews][likes the idea of]]
[[https://utcc.utoronto.ca/~cks/space/blog/programming/RustMyViews][Rust]]). It would quite like to embark on the grand (and periodically
frustrating) adventure of (re)building a sophisticated editing environment in
vim, learning all about vim plugins, and so on, and even now it's busy trying
to convince me that I'm making a mistake and I'm only going to frustrate
myself by continuing to go back and forth between vim and GNU Emacs instead of
mastering vim (and finding cool plugins for it). The rest of me has other
things to do.

(And I admit that I still like GNU Emacs, and not just because you can put the
kitchen sink into it. I've edited a lot of code (and text) in GNU Emacs over
the years and in the process I've gotten quite used to it. I didn't drift away
from it because I dislike it, I drifted away because it doesn't make for a
good [[https://utcc.utoronto.ca/~cks/space/blog/sysadmin/WhyViForSysadmins][sysadmin's editor]].)
