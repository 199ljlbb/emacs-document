#+TITLE: emacs-calc
#+URL: http://www.johndcook.com/blog/2010/10/11/emacs-calc/
#+AUTHOR: lujun9972
#+CATEGORY: raw
#+DATE: [2016-07-06 三 11:19]
#+OPTIONS: ^:{}


Emacs has quite a sophisticated scientific calculator. Like many other things in Emacs, it is both powerful
and idiosyncratic.

The calc module ships with Emacs as of version 22. The [[http://www.xemacs.org/Documentation/packages/html/calc.html][calc manual]] has full documentation, but it takes some
work to understand. This post may make it easier to read the manual.

The manual says you can start calc with the command M-#. That did not work for me, but the command M-x calc
did.

Calc has two modes: RPN ([[http://en.wikipedia.org/wiki/Reverse_Polish_Notation][reverse Polish notation]]) and algebraic. RPN is the default mode and uses very terse
commands, often one or two letters. Most people will find the algebraic mode syntax more familiar. Commands in
algebraic mode begin with a quote and use longer, more descriptive names.

For example, suppose you want to find the cosine of 5. You can do this in RPN mode by typing 5 and pressing
return, then typing shift-C. To do the same calculation in algebraic mode, type 'cos(5) and return.

I’ll step through to gamma function documentation as an example of how to interpret the manual. It says

#+BEGIN_EXAMPLE
  The f g (calc-gamma) [gamma] command computes the Euler gamma function. …
#+END_EXAMPLE
   
This means that in RPN mode, you enter the argument of the gamma function, say 5, and then type fg. (Not f g
as you might expect.) You could also enter 5 and then type M-x calc-gamma. In algebraic mode, the syntax would
be 'gamma(5). So the pattern in the manual is

#+BEGIN_EXAMPLE
  RPN keystrokes (lisp function) [algebraic syntax].
#+END_EXAMPLE
   
The calc module has an amazing range of functionality — symbolic calculation, matrix operations, graphics,
etc. — though I don’t imagine I’d use much of it. In my mind, the benefit of calc is being able to do a quick
calculation without leaving Emacs. Although one could do sophisticated calculations in calc, I doubt I would
for two reasons. First, if I have to look up how to do something in calc, I lose the benefit of not
interrupting my workflow. Second, I don’t want to start a computation in calc and then discover I need
something that isn’t there and then have to switch to another tool such as SciPy, Mathematica, or R.

Related posts:

  * [[http://www.johndcook.com/blog/2010/07/14/bc-math-library/][Three surprises with bc]]
  * [[http://www.johndcook.com/blog/2010/04/01/giving-emacs-another-try/][Giving Emacs another try]]
