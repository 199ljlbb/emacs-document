#+URL: http://standardsandfreedom.net/index.php/2016/10/09/an-emacs-update/

It’s been a while I have not written about Emacs and more particularly my
personal use case for Emacs. I started using Emacs because I was looking for a
text editor capable of handling formats such as HTML and CSS; then I found out
Emacs had quite convenient IRC clients and I could even use a bit of Org mode
for project management. That was in 2013 and early 2014. As I was impressed by
the seemingly infinite power of Emacs, I started using Org-mode more and more
on a daily basis (something I still do today); and I started learning (e)lisp
both in order to understand Emacs a bit more in-depth and because I wanted to
start to learn a programming language.

Remember: I’m no software developer. When I’m not maintaining or creating
websites for friends, I’m not doing much else in the way of “coding”. My Emacs
usage remains however a daily experience that I would like to share here.

The first and basic idea that drives my usage of Emacs is both simple yet
powerful. I’m certainly not the first one to come up with it: most of what we
do as users of computers on a daily basis revolves around text edition and
handling text. That’s an obvious concept when it is applied to software
development or just plain text edition. But it is equally relevant when we
consider email, IRC, file and folder management, Twitter and RSS feeds
browsing; and it does still make sense with web browsing for instance.

Put simply and broadly, many things -if not most- that we accomplish on a
computer can be seen as text editing. Once somebody shares this view deeply,
that is on a personal basis and for its own personal case, it is possible to
accomplish a lot of things with text editors such as Emacs. What this does
practically mean in my case is that I use Emacs for a broad variety of usage
on a daily basis:

Email: I am happy -and somewhat proud- to announce that I’m using mu4e (and
emacs set of tools and clients for email) for most of my mail processing. I
now rarely use Evolution, which is my only graphical email client besides K9
on Android. Mu4e caters to most of my needs when it comes to email. In fact it
fits the bill almost perfectly, the only exception being that I sometimes need
to tweak it a bit when receiving oddly formated emails sent from Outlook 2014
and upwards. My mails are stored both online and on my computer in the MailDir
format. I fetch them and sync them between my computer and the servers using
offlineimap; they are indexed and searchable using the powerful mu mail
indexer; and there is no performance issue at all. If anything it is
noticeably faster than graphical email clients, especially the search part.
Emacs in general handles html emails surprisingly well, and besides the
Outlook 14 hiccup I mentioned above, I have no trouble viewing decent html on
my “buffer”.

Org-Mode: that one is a heavy hitter. I use Org-mode for what it does best:
task management, planning, note taking and ideas organization. I use it
sometimes to write blog posts, but where it would really be useful in that
regard would be with a blogging engine supporting org files and / or markdown.

Blogging and text editing: I write my posts using either org-mode or markdown.
But the real trick is to have an effective workflow between Emacs and the blog
engine. Unfortunately WordPress is not so good at that which makes me think
about a few options for the future.

IRC: I don’t use IRC on a daily basis, but I have grown frustrated for years
with IRC clients. No names here, but I find most of them complex and annoying.
At least with ERC, I have an unobstrusive experience which got me on IRC more
frequently, and not just to communicate within the confines of the LibreOffice
community.

File and document management: Using Dired, a well known Emacs set of tools,
file management is increasingly a good reason for me to use Emacs.

Terminal using eshell: I’m not fiddling on the command line all day long, but
using Arch Linux on my systems means that you will fire your terminal at least
one every two or three days in order to keep the system updated.

Files editor: That is as close to coding as I get to this day. I have to
maintain a few websites for friends and sometimes it means dabbling into the
CSS, PHP scripts or Javascript files. Of course, Emacs excels at that, for
instance with web-mode (but there are other utilities and modes available).

Documentation: Emacs comes with a lot of tutorials and manuals for many of its
main utilities, and of course to learn (e)Lisp. It is possible and even very
convenient to browse this documentation stack within Emacs.

What I use less for various reasons:

Internet browsing: Emacs is getting better at that but let’s face it, unless
I’m browsing documentation or text-rich web pages online, I get a rather
limited use for a text only browser.

Twitter mode: I would LOVE to edit and browse Twitter through Emacs. But the
twitter mode is simply counterintuitive and slow. I’m a taker of any
suggestion for any other Twitter utility running on Emacs out there.

RSS feeds browsing: Here again, I think we’re missing a good package. Emacs
ships with a native RSS feed reader, but it is frankly a bit horrible. Another
tool, elfeed, has a much richer functionnality but either because of lack of
time or because of a bad configuration I just don’t find it convenient, even
though it loads evertime on my own Emacs and is updated with my own feed. It
is something to consider for the future.

I hope I have given some hope for people interested in using Emacs. I’m not a
programmer, and if anything my specialities are literature, philosophy and
History. As one can see however, Emacs is really useful for me and it should
be for a lot of people as long as they’re willing to invest some time and
enjoy learning new things and new ways to work and communicate.
