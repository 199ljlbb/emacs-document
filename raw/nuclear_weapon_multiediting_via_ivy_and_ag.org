#+TITLE: nuclear_weapon_multiediting_via_ivy_and_ag
#+URL: https://sam217pa.github.io/2016/09/11/nuclear-power-editing-via-ivy-and-ag/
#+AUTHOR: lujun9972
#+CATEGORY: raw
#+DATE: [2016-09-14 三 15:09]
#+OPTIONS: ^:{}



Sometimes when I am working on a project, I use project-wide variable or function definition. So I name them.

I usually suck at naming.

So when I think of a better name, I need a way to change it globally, ie in all the files of the current
project that uses it.

In Spacemacs, I have heard of what Fabien Dubosson, one of the main Spacemacs dev, called the [[https://gitter.im/syl20bnr/spacemacs?at=573d831c0cb634927f80545e][“nuclear weapon]]
[[https://gitter.im/syl20bnr/spacemacs?at=573d831c0cb634927f80545e][of multi-editing”]]. When I switched from Helm to Ivy, I looked for a way to do the same thing.

It turned out that Ivy-occur has nice integration with Wgrep since Ivy version [[http://oremacs.com/2016/04/26/ivy-0.8.0/][0.8]].

* Nuclear-weapon multi-editing :

I call counsel-ag, to search for the string I want to modify in the current directory. By default, ag (and
counsel-ag) will ignore files ignored by git.

[[https://s12.postimg.org/u0co6huct/first_step.png]]

I press C-c C-o (ivy-occur) in the search result. It opens an ivy-occur buffer.

[[https://s10.postimg.org/ssiucf35l/second_step.png]]

I switch to this buffer and press C-x C-q (ivy-wgrep-change-to-wgrep-mode) to edit it. I can now change each
variable name globally using normal search and replace techniques. I use Evil-ex commands :%s/pattern/replace/
g but you may use others as well (I have heard good things of Iedit too…).


[[https://s14.postimg.org/s6ahj1eq9/third_step.png]]

I then press C-c C-c (wgrep-finish-edit). Now every occurence of the word edit in all files has been replaced
with potatoes.

Ivy is great.
