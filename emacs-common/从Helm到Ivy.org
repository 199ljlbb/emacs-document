#+TITLE: 从Helm到Ivy
#+URL: https://sam217pa.github.io/2016/09/13/from-helm-to-ivy/
#+AUTHOR: samrayleung
#+CATEGORY: emacs-commont
#+DATE: <2017-03-04 Sat>
#+OPTIONS: ^:{}
最近，我发现很多Emacs 用户对Ivy 很感兴趣；而且大部份用户都是已经了解过Helm 或者Ido的
当有人在Reddit 上面问 [[https://www.reddit.com/r/emacs/comments/51lqn9/helm_or_ivy/][选择Helm 还是Ido]]这类问题的时候，我觉得我会给出我自己的选择
*Ivy*,即使我是一个前Helm 的狂热用户
[[http://www.feer-mcqueen.com/blog/wp-content/uploads/2015/11/miimalism-vs.-maximilasim-700x334.jpg]]
_最大或者最小_

*Helm 和Ivy 都是补全框架*.这意味着它们都是Emacs 生态系统中用来在用户输入后缩窄可供
选择选项范围的工具。很自然而然想起的通用例子就是搜索文件。Helm 和Ivy 都可以帮助
用户快速搜索文件

它们两者都是框架，这意味着它们都可以用在那些需要补全或者缩窄范围的复杂命令。例如
Helm 有一个命令(*helm-google-suggest*)可以模拟Goole 的搜索框，并在你输入时给出相应的
google 提示

Ivy 和Helm 都有相似的目标，但是它们实现的方法却是迥然不同

现在我想站在用户的角度来比较一下这两个工具。我这里指的用户观点是我在不需要了解
Helm 和Ivy 的内部工作原理的前提下对这两个工具进行比较。其实，因为我对 *elisp*
还谈不上精通，所以也没用办法就实现细节来进行比较。但是这两个工具我都使用过，
所以我可以从用户的角度，跟你分享我使用它们的不同感受。最后，我从Helm 切换到了Ivy

我想先谈Helm.当我使用Spacemacs 的时候，我学会了怎么使用Helm,以Helm 的方式思考
,如何自定义Helm,怎么把Helm 配置得称心如意。我想我应该算得上是一个中级的Helm 用户吧。
我有读过[[http://tuhdo.github.io/helm-intro.html][这篇文章]] 还有[[http://tuhdo.github.io/helm-projectile.html][这篇文章]] 以及[[https://github.com/emacs-helm/helm/wiki][Wiki]] 此外，在长达一年的时间里，我每天都是使用Helm
https://images.pexels.com/photos/6172/red-desk-knife-penknife.jpg
/Helm 是Emacs 的瑞士军刀/
