#+TITLE: 一个 CEO 的 Emacs 指南
#+URL: https://blog.fugue.co/2015-11-11-guide-to-emacs.html
#+AUTHOR: Samray
#+CATEGORY: emacs-common
#+DATE: <2017-04-04 Tue>
#+OPTIONS: ^:{}

约数年前，噢，不，是数十年前了，我就生活在 Emacs. 编写代码和文档，管理邮件和日程，
以及使用 shell 自动化一切的操作，这些活动都是在我的编辑器(或者说是操作系统)上完成
的;这样的生活我过得真的很开心。数十春秋寒暑过去了，我也用上了其他更加新，更加潮
的玩意了。结果呢，我却已经忘记了如何在脱离鼠标的情况下高效地浏览，跳转文件了。大
概是三个月前吧，我注意到我有大量的时间是浪费在不同的应用程序和电脑之间的来回切换，
我决定再次投入 Emacs 的怀抱，这是一个非常正确的决定，为什么这么说？原因我会在接下
来的段落里面说明，此外我还会介绍我的 Emacs 配置以及 Dropbox 的技巧，以构建一个可迁
移的环境。

对于那些未曾使用过 Emacs 的人而言，Emacs 很可能是你现在所厌恶，但最终喜爱的东西。乍
一看，你会觉得 Emacs 是一台房子那么大的却拥有只烤面包机全部功能的 Rube Goldberg
machine (译者注：这是卡通中的一种完成简单任务的非常复杂的机器).很难说这样的话是
对 Emacs 的一种赞美，不过请留意 *乍一看* 这个非常重要的词。因为当你真的深入了解
Emacs 之后，你就会发现 Emacs 即使是烤面包机，也是一台可以当引擎用的 "核能烤面包机
",可以处理任何你想处理的文本。当你意识到你有多少时间是花在处理文本上，你就会觉得
你说"Emacs 是像引擎一样强大"的言论是相当大胆激进；虽说这有点惊世骇俗，但这就是事
实

可能对于我来说，更重要的是，使用的是一个让我感觉到我是拥有它的程序，而不是那些让
我觉得我只是扮演一个匿名的用户，并且会被它位于 Soma 或者 Redmond (译者注 :微软公
司所在地之一) 的市场营销部门窥探钱包，想方设法让我付钱的程序。现代的生产或者创作
工具 (例如，Page 或 IDE) 都像碳纤维自行车那样;它们可以很轻易地进行拆卸和组装。
Emacs 就好像满箱子的经典 Campagnolo (译者注：高端自行车部件)部件和非常好的钢制框
架，只是缺了一个曲柄臂和制动杠，你必须自己去网上搜寻你缺少的部件。Emacs 的第一个
特点就是快和完整，第二个特点就是带给你的余生无尽的快乐 (或者是烦恼，就取决于你是
什么样的人了).我自己就是那种会在找寻老古董或者折腾编辑器中得到很多乐趣的人了。这
个就因人而异了

[[https://camo.githubusercontent.com/501cde22bde7a7411ad1cb7f1ce837833b7107b7/68747470733a2f2f626c6f672e66756775652e636f2f6173736574732f696d616765732f62696379636c652e6a7067]]

我现在仍在骑的 1933 钢制自行车。有兴趣的可以看一下不同材料的自行车车架的比较
[[https://www.youtube.com/watch?v=khJQgRLKMU0]]

可能有时 Emacs 给人的感觉是不合时宜的老古董，这种看法并不正确。Emacs 是非常强大
并且可以与时俱进的，但是 Emacs 需要你耐心地理解它的哲学。而 Emacs 的哲学又是那样
的与众不同，甚至可以说是怪异；在了解 Emacs 以后，你又会发现 Emacs 是那般的引人入
胜。对我而言，Emacs 更像未来的产物，而不是过时的古董; 就好像钢制车架会在未来大行
其道，而碳纤维车架最终会无人问津那样; 也正如那些最新潮的应用都会被遗忘在历史的洪
流中，而 Emacs 会恒久远，永流传。

如果你热忱于使用 Lisp 打造适合自己的并且可以在任何电脑移植的工作环境的话，你一定
会爱上 Emacs. 但是如果你喜欢那些新朝，开箱即用，无需额外投资时间精力学习的工作环
境的话，Emacs 可能就不适合你了。我已经没有编写代码了 (除了 Ludwig 和 Emacs
Lisp), 但是我发现大部份在 Fugue (译者注：作者所在的公司) 的工程师都可以高效地使
用 Emacs. 在 Fugue, 大概 30% 的工程师使用 Emacs , 40% 的工程师使用 IDE, 30% 的工
程师使用 Vim. 而本文是写给 CEO 以及其他的 PHB 的(Pointy-Haired Boss 译者注：漫画
中的蠢蠢的老板)(当然，也写给所有对 Emacs 感兴趣的人). 所以我接下来会解释我为什么
那喜爱 Emacs 以及我是怎么使用 Emacs 的。我希望可以为你提供足够多的细节， 以便你
不用 google 就可以玩转 Emacs. 如果你也喜欢我的 Emacs 环境，你可以把我的 [[https://blog.fugue.co/2015-11-11-guide-to-emacs.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io#download][Emacs
configuration]] 下载下来
* Lasting Advantages
  使用 Emacs 的长期好处就是你的生活会变得更加简单，而对 Emacs 的投入产出比会让你觉
  得学习 Emacs 时非常值得的。考虑一下下面这些内容：
** No more Context Switching
   如果你像我那样，需要经常处理大量的文档 -- 从博文到需要员工 review 的会议上的
   资料，那么你花费时间去单独学习 Org-mode 就非常由必要了。在现代的计算世界，上
   述的这些文档工作意味着你需要若干不同的程序，而这些程序有各种令人分心的用户接
   口，以及使用不同的方式来进行保存，排序，搜索。结果就是你需要在各种不同的内容
   之间切换，并要记住它们之间的细节。我讨厌这样的切换，我讨厌因为这种不友好的设
   计而导致的不必要的负担，我讨厌我需要记住这些本应该由电脑记住的内容。就提供一
   个单一的环境而言，Emacs 对于 PHB ,会比对于程序员而言更加强大，因为程序员一天
   大部份的时间都会专注在第一的引用。而且，在不同内容切换所花费的代价会要比我们
   所了解的高。操作系统和那些程序通过修饰用户接口以粉饰这个真相。如果你是一个技
   术人员，使用一个单独的快捷键就可以调用一个强大的语言解释器对你而言是非常有用的。
   
   许多程序可以一整天全屏以编辑文本。而 Emacs 是独一无二， 因为它不仅是一个文本
   编辑器，还是一个 Lisp 解释器。本质上， 当你在处理代码逻辑的时候，你按下一个或
   两个按键之后，你有了一台图灵完备机了。如果你不太了解编程，或者精通编程，你都
   会意识到你可以在 Emacs 里面实现任何事情。只要你记住了 Emacs 的命令，那么在你
   工作的时候，你几乎可以把你电脑的潜能都激发出来。正如你不会想在 Emacs 里面再创
   建一个 Excel 程序， 但是大部份你在 Excel 里面完成的事都会变得越来越细化，并且
   很容易用一两行代码实现。如果我需要操作数字，我更可能跳转到 scratch 缓冲区，并
   且编写一些代码，而不是打开一个电子表格。即使我要写邮件，并且邮件不止一行那么
   短，我也会在 Emacs 里面编写，并且粘贴到我在 Emacs 的邮件客户端。当你只需使用
   Emacs 来完成的工作流的时候为什么还需要不断地切换程序？ 你可能需要进行简单的一
   两次计算，但是随着计算量的增加以及复杂性的增强，在 Emacs 里面完成计算会相对容
   易。可能对于那些可以为其他人提供丰富特性的程序而言，这是独一无二的吧。还记得
   Isaac Asimov 书中提及的魔幻般的终端么？ 在我接触过的众多的程序中， Emacs 是最
   接近书中所描述的玩意。我没有再去纠结，我应该使用哪个程序做这件事，以及使用哪
   个程序完成另外一件事呢这类的事情。取而代之的是， 我只是工作。因为已经有如此强
   大和高效的工具了，我只需坚持使用它。
** Creating Things in Peace and Quiet
   拥有你所接触过的最强大的文本编辑特性是什么样的感受呢？有一整个社区的成员来创
   造有用的特性又是怎么样的感觉？指间触控强大的 Lisp 的感觉呢？这些就是我使用
   Emacs 来完成除了操作音频和图片之外的全部创造性工作的感受了
   
   在我的桌面上，有两个屏幕；其中一个就是打开 Emacs 的 portrait mode 并全屏一整
   天，另外一个屏幕就是打开浏览器，用来阅读和搜索；我通常也会打开一个终端。我回
   把我的日历，邮件以及其他东西放到 OS X 的另外一个桌面，不过在我在 Emacs 里面的
   时候，我会把它们全部隐藏，并且关闭全部的通知。这样可以让我专注于我手头的工作。
   我发现使用那些拥有现代用户界面的程序，是没可能不被它们各种用户提示和帮助信息
   分散注意力的。我不需要在我已经操作成千上万次以后还要不断提醒我如何操作，我需
   要的是简洁，易用的并且尽可能周到的白纸。可能我只是随着年纪的增长和各种糟糕的
   体验，而不能忍受这样杂乱不堪的环境，但是我还是建议每个人都应该尝试一下
   Emacs. 这样在你的电脑，你就拥有了一个安静舒适的环境。当然，现在的很多的应用都
   可以隐藏掉它们的接口，此外，谢天谢地，微软和苹果都有了完全意义下的全屏模式。
   但是，并没有其他的应用可以强大到让你在 "活在" 这应用里面完成大部分的事情。除
   非你是一整天都在编写代码或者是在编写长篇的文献，例如书本，不然你还是要面对很
   多乱七八遭的应用。此外，大部分现代的程序似乎都不能兼顾易用性和功能。比 office
   的程序更让我厌恶的就是 office 程序的在线版本

   [[https://camo.githubusercontent.com/caaf300c13a13e76014b3dee10fa8f3215877aec/68747470733a2f2f626c6f672e66756775652e636f2f6173736574732f696d616765732f6465736b746f702e6a7067]]

   我的桌面布局，Emacs 在左边。

   但是关于交流方面又如何呢？创造和交流之间的差异是很明确的。在为这两者设定明确
   的时间之后，我会变得非常有效率。我们在 Fugue 使用 Slack, 这真的是痛并快乐着。
   我把 Slack 和我的日历，邮件放到同一个消息桌面，那么，在我工作的时候，我就可以
   幸福地把整个喧嚣的世界排除在外了。只有当有 Slackstorm 或者是来自 VC 或者
   Board Director 的邮件可以沉醉在工作的我唤醒，不然的话，大部份其他的事我都是会
   过了一两个小时才会去处理的
** Taking Everything with You and Keeping It Forever
   第三个原因我觉得 Emacs 比其他的环境先进得多的原因就是 Emacs 很容易带给你所有
   的东西

